1.HTML 文本格式化
加粗文本
斜体文本
电脑自动输出
下标 和 上标

2.HTML 格式化标签
HTML 使用标签 <b>("bold") 与 <i>("italic") 对输出的文本进行格式, 如：粗体 or 斜体
这些HTML标签被称为格式化标签（请查看底部完整标签参考手册）。
通常标签 <strong> 替换加粗标签 <b> 来使用, <em> 替换 <i>标签使用。
然而，这些标签的含义是不同的：
<b> 与<i> 定义粗体或斜体文本。
<strong> 或者 <em>意味着你要呈现的文本是重要的，所以要突出显示。现今所有主要浏览器都能渲染各种效果的字体。不过，未来浏览器可能会支持更好的渲染效果。

3.在线实例
3.1文本格式化
此例演示如何在一个 HTML 文件中对文本进行格式化

3.2预格式文本
此例演示如何使用 pre 标签对空行和空格进行控制。

3.3"计算机输出"标签
此例演示不同的"计算机输出"标签的显示效果。

3.4地址
此例演示如何在 HTML 文件中写地址。

3.5缩写和首字母缩写
此例演示如何实现缩写或首字母缩写。

3.6文字方向
此例演示如何改变文字的方向。

3.7块引用
此例演示如何实现长短不一的引用语。

3.8删除字效果和插入字效果
此例演示如何标记删除文本和插入文本。

4.HTML 文本格式化标签
标签        描述
<b>	        定义粗体文本
<em>	    定义着重文字
<i>	        定义斜体字
<small>	    定义小号字
<strong>    定义加重语气
<sub>	    定义下标字
<sup>	    定义上标字
<ins>	    定义插入字
<del>	    定义删除字

5.HTML "计算机输出" 标签
标签	    描述
<code>	    定义计算机代码
<kbd>	    定义键盘码
<samp>	    定义计算机代码样本
<var>	    定义变量
<pre>	    定义预格式文本

6.HTML 引文, 引用, 及标签定义
标签	        描述
<abbr>	        定义缩写
<address>	    定义地址
<bdo>	        定义文字方向
<blockquote>	定义长的引用
<q>	            定义短的引用语
<cite>	        定义引用、引证
<dfn>	        定义一个定义项目。

7.笔记
7.1文本显示为单行，超过部分隐藏并使用省略号，实例:
overflow:hidden;
text-overflow:ellipsis;
white-space:nowrap;
使用 display:-webkit-box; 让文本显示为多行(只有-webkit内核才有作用)，实例:
overflow:hidden;
text-overflow:ellipsis;
display:-webkit-box;
-webkit-line-clamp: 2;
-webkit-box-orient:vertical;
width:100px;
7.2关于 <b> 和 <strong>
在显示上，这两个标签都可是加粗文本，呢么为什么会有两个功能"相同"的标签呢？而且好像 strong 并非个例。
首先，这两个并非完全相同。比如，如果使用网页阅读器阅读网页（盲人使用），strong 会重读，b 则不会。
其次，从起源上来说，strong 是为了在未来建设语义网而诞生的。应该知道的是，html 是负责显示的标记，不能表示语义。也就是说，浏览器知道这个标签如何显示，而不知道标签所标记的内容应该是什么含义。而 strong 在语义上走出了第一步。
7.3
1、<em> 把文本定义为强调的内容
<em> 标签告诉浏览器把其中的文本表示为强调的内容。对于所有浏览器来说，这意味着要把这段文字用斜体来显示。
尽管现在 <em> 标签修饰的内容都是用斜体字来显示，但这些内容也具有更广泛的含义，将来的某一天，浏览器也可能会使用其他的特殊效果来显示强调的文本。如果你只想使用斜体字来显示文本的话，请使用 <i> 标签。除此之外，文档中还可以包括用来改变文本显示的级联样式定义。
2、<i>显示斜体文本效果
<i> 标签和基于内容的样式标签 <em> 类似。它告诉浏览器将包含其中的文本以斜体字（italic）或者倾斜（oblique）字体显示。如果这种斜体字对该浏览器不可用的话，可以使用高亮、反白或加下划线等样式。
3、<dfn>定义一个定义项目
<dfn> 标签可标记那些对特殊术语或短语的定义。
现在流行的浏览器通常用斜体来显示 <dfn> 中的文本。将来，<dfn> 还可能有助于创建文档的索引或术语表。
与其他许多基于内容的样式和物理样式标签一样，<dfn> 标签尽量少用为妙。
也就是说它们要实现的目的不同，但都用同样的表现方式，就是斜体。